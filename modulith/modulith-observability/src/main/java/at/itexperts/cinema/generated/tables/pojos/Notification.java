/*
 * This file is generated by jOOQ.
 */
package at.itexperts.cinema.generated.tables.pojos;

import java.io.Serializable;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Notification implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String type;

    public Notification() {}

    public Notification(Notification value) {
        this.id = value.id;
        this.type = value.type;
    }

    public Notification(Long id, String type) {
        this.id = id;
        this.type = type;
    }

    /**
     * Getter for <code>public.notification.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.notification.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.notification.type</code>.
     */
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>public.notification.type</code>.
     */
    public void setType(String type) {
        this.type = type;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;
        final Notification other = (Notification) obj;
        if (this.id == null) {
            if (other.id != null) return false;
        } else if (!this.id.equals(other.id)) return false;
        if (this.type == null) {
            if (other.type != null) return false;
        } else if (!this.type.equals(other.type)) return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Notification (");

        sb.append(id);
        sb.append(", ").append(type);

        sb.append(")");
        return sb.toString();
    }
}
