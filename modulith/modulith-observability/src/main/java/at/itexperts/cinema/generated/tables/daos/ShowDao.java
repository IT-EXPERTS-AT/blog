/*
 * This file is generated by jOOQ.
 */
package at.itexperts.cinema.generated.tables.daos;

import at.itexperts.cinema.generated.AbstractSpringDAOImpl;
import at.itexperts.cinema.generated.tables.Show;
import at.itexperts.cinema.generated.tables.records.ShowRecord;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
@Repository
public class ShowDao extends AbstractSpringDAOImpl<ShowRecord, at.itexperts.cinema.generated.tables.pojos.Show, Long> {

    /**
     * Create a new ShowDao without any configuration
     */
    public ShowDao() {
        super(Show.SHOW, at.itexperts.cinema.generated.tables.pojos.Show.class);
    }

    /**
     * Create a new ShowDao with an attached configuration
     */
    @Autowired
    public ShowDao(Configuration configuration) {
        super(Show.SHOW, at.itexperts.cinema.generated.tables.pojos.Show.class, configuration);
    }

    @Override
    public Long getId(at.itexperts.cinema.generated.tables.pojos.Show object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Show> fetchRangeOfId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Show.SHOW.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Show> fetchById(Long... values) {
        return fetch(Show.SHOW.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public at.itexperts.cinema.generated.tables.pojos.Show fetchOneById(Long value) {
        return fetchOne(Show.SHOW.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<at.itexperts.cinema.generated.tables.pojos.Show> fetchOptionalById(Long value) {
        return fetchOptional(Show.SHOW.ID, value);
    }

    /**
     * Fetch records that have <code>movie_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Show> fetchRangeOfMovieId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Show.SHOW.MOVIE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>movie_id IN (values)</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Show> fetchByMovieId(Long... values) {
        return fetch(Show.SHOW.MOVIE_ID, values);
    }

    /**
     * Fetch records that have <code>theater_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Show> fetchRangeOfTheaterName(
            String lowerInclusive, String upperInclusive) {
        return fetchRange(Show.SHOW.THEATER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>theater_name IN (values)</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Show> fetchByTheaterName(String... values) {
        return fetch(Show.SHOW.THEATER_NAME, values);
    }

    /**
     * Fetch records that have <code>show_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Show> fetchRangeOfShowTime(
            LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Show.SHOW.SHOW_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>show_time IN (values)</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Show> fetchByShowTime(LocalDateTime... values) {
        return fetch(Show.SHOW.SHOW_TIME, values);
    }
}
