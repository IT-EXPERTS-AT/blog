/*
 * This file is generated by jOOQ.
 */
package at.itexperts.cinema.generated.tables.daos;

import at.itexperts.cinema.generated.AbstractSpringDAOImpl;
import at.itexperts.cinema.generated.tables.Ticket;
import at.itexperts.cinema.generated.tables.records.TicketRecord;
import java.util.List;
import java.util.Optional;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
@Repository
public class TicketDao
        extends AbstractSpringDAOImpl<TicketRecord, at.itexperts.cinema.generated.tables.pojos.Ticket, Long> {

    /**
     * Create a new TicketDao without any configuration
     */
    public TicketDao() {
        super(Ticket.TICKET, at.itexperts.cinema.generated.tables.pojos.Ticket.class);
    }

    /**
     * Create a new TicketDao with an attached configuration
     */
    @Autowired
    public TicketDao(Configuration configuration) {
        super(Ticket.TICKET, at.itexperts.cinema.generated.tables.pojos.Ticket.class, configuration);
    }

    @Override
    public Long getId(at.itexperts.cinema.generated.tables.pojos.Ticket object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Ticket> fetchRangeOfId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Ticket.TICKET.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Ticket> fetchById(Long... values) {
        return fetch(Ticket.TICKET.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public at.itexperts.cinema.generated.tables.pojos.Ticket fetchOneById(Long value) {
        return fetchOne(Ticket.TICKET.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<at.itexperts.cinema.generated.tables.pojos.Ticket> fetchOptionalById(Long value) {
        return fetchOptional(Ticket.TICKET.ID, value);
    }

    /**
     * Fetch records that have <code>show_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Ticket> fetchRangeOfShowId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Ticket.TICKET.SHOW_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>show_id IN (values)</code>
     */
    public List<at.itexperts.cinema.generated.tables.pojos.Ticket> fetchByShowId(Long... values) {
        return fetch(Ticket.TICKET.SHOW_ID, values);
    }
}
